_export:
  td:
# List the database where you would like your create/drop table to live.
    database: recent_change_logs
# Set a lookback window in days. This will look at changes measured from 00:00 of run date
  lookback_range_days: 7
  anomaly_range_days: 60
  anomaly_threashold: 2
# If you would like your change log to create a google sheet listing the changes add the google sheet ID and your 
# Treasure Data connection name here. If not simply add a '#' in front of the next two lines to save for later option.
  google_sheet_id: sheet ID
  google_sheet_connection_name: connection_name
# include each email address you would like to recieve the notification of table creates/drops, seperate with commas.
  mailing_list: example@email.com
  # Not functional yet, but some ideas for next itteration.
  # priority_tables: would provide details in a table within email body about top x tables.
  # exclude_tables: would offer ability to exclude tables/databases.

# Replaces the google sheet listing all recent drops/creates for easy sorting, filtering and investigation. If you are 
#opting out of this section either delete this entire step or add a '#' before each line to save it for later as comments.    
# +log_table_drops_and_creates_in_google_sheets:
#  td>:
#  query: |
#    SELECT 
#       CAST(FROM_UNIXTIME(time)as varchar), 
#       event_name, 
#       resource_name, 
#       resource_id, 
#       user_email, 
#       id AS job_id 
#    FROM td_audit_log.access 
#    WHERE (event_name LIKE 'table_create' OR event_name LIKE 'table_delete') 
#    AND time > TO_UNIXTIME(date_trunc('day',now()))-(86400*${lookback_range_days})
#  result_connection: ${google_sheet_connection_name}
#  result_settings:
#    spreadsheet_id: ${google_sheet_id}
#    mode: replace

# Creates a log table in the database selected above containing all records of tables being created/droped over the 
# anomaly range when there are fewer than ${anomaly_threashold} actions of the same type.
+create_table_of_only_anomalous_creates_and_drops_within_anomaly_range:
  +initialize:
    td_ddl>:
    create_tables: ["${td.database}.counts_of_table_drops_and_creates_last_${anomaly_range_days}_days"]
    empty_tables: ["${td.database}.counts_of_table_drops_and_creates_last_${anomaly_range_days}_days"]
  +add_data:
    td>:
    query: |
      INSERT INTO ${td.database}.counts_of_table_drops_and_creates_last_${anomaly_range_days}_days
      SELECT 
        event_name, 
        resource_name, 
        count(*) AS change_count
      FROM td_audit_log.access 
      WHERE (event_name LIKE 'table_create' OR event_name LIKE 'table_delete') 
        AND time > TO_UNIXTIME(date_trunc('day',now()))-(86400*${anomaly_range_days})
      GROUP BY event_name, resource_name
      HAVING count(*) <= ${anomaly_threashold}

+continue_only_if_anomaly_detected:
  +count_anomalies:
    td>:
    query: |
      SELECT COUNT(*) AS count_of_anomalies
      FROM ${td.database}.counts_of_table_drops_and_creates_last_${anomaly_range_days}_days
      WHERE 
        (event_name LIKE 'table_create' OR event_name LIKE 'table_delete') 
         AND time > TO_UNIXTIME(date_trunc('day',now()))-(86400*${lookback_range_days})
    store_last_results: true
  +only_continue_if_count_greater_than_zero:
    if>: ${td.last_results.count_of_anomalies > 0}
    _do:
      
      +create_tables_of_anomalous_creates_and_drops_within_lookback_range:
        +log_all_anomalous_jobs:
          +initialize:
            td_ddl>:
            create_tables: ["${td.database}.jobs_anomalous_table_drops_and_creates_last_${lookback_range_days}_days"]
            empty_tables: ["${td.database}.jobs_anomalous_table_drops_and_creates_last_${lookback_range_days}_days"]
          +add_data:
            td>:
            query: |
              INSERT INTO ${td.database}.jobs_anomalous_table_drops_and_creates_last_${lookback_range_days}_days
              SELECT 
                CAST(FROM_UNIXTIME(a.time)as varchar) AS change_date, 
                a.event_name, 
                a.resource_name, 
                a.resource_id, 
                a.user_email, 
                a.id AS job_id,
                change_count
              FROM td_audit_log.access AS a
              JOIN ${td.database}.counts_of_table_drops_and_creates_last_${anomaly_range_days}_days AS b

              ON a.resource_name = b.resource_name AND a.event_name = b.event_name

              WHERE 
                (a.event_name LIKE 'table_create' OR a.event_name LIKE 'table_delete') 
                AND a.time > TO_UNIXTIME(date_trunc('day',now()))-(86400*${lookback_range_days})

        +if_anomaly_threashold_is_greater_than_one_log_anomalous_tables:
          if>: ${anomaly_range_days > 1}
          _do:
            +initialize:
              td_ddl>:
              create_tables: ["${td.database}.tables_anomalous_table_drops_and_creates_last_${lookback_range_days}_days"]
              empty_tables: ["${td.database}.tables_anomalous_table_drops_and_creates_last_${lookback_range_days}_days"]
            +add_data:
              td>:
              query: |
                INSERT INTO ${td.database}.tables_anomalous_table_drops_and_creates_last_${lookback_range_days}_days
                SELECT 
                  a.event_name, 
                  a.resource_name, 
                  count(*) AS change_count
                FROM td_audit_log.access AS a
                JOIN ${td.database}.counts_of_table_drops_and_creates_last_${anomaly_range_days}_days AS b

                ON a.resource_name = b.resource_name AND a.event_name = b.event_name

                WHERE 
                  (a.event_name LIKE 'table_create' OR a.event_name LIKE 'table_delete') 
                  AND a.time > TO_UNIXTIME(date_trunc('day',now()))-(86400*${lookback_range_days})
                GROUP BY a.event_name, a.resource_name

# If any creates/drops occured an email is sent to the mailing_list to let them know. Make sure to add the 
# html/email_body.html mailing file to this workflow. If you have opted out of Google Sheets implimentation you 
      # may want to edit the text in this file as it provides a link to Google Sheets.
      #+send_email_allert_if_new_records:
      #  if>: ${td.last_results.record_count > 0}
      #  _do:
      #    mail>: html/email_body.html
      #    subject: Tables have been created/dropped in the last ${lookback_range_days} days
      #    to: ${mailing_list}
      #    html: true
#    _else_do:
#      +send_email_no_anomalies_detected:
